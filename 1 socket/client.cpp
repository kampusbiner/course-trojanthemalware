/*

Created By: KampusBiner

Simak tutorialnya di: https://www.youtube.com/playlist?list=PL7TeU9V9_9pKsTeKtQiC4bjJ7T-Ie_GCz

*/

#include <winsock2.h>
#include <iostream>

using namespace std;

char szServerIP[] = "192.168.1.7";
int nServerPort = 5110;

bool initWinSock();

int main(){

    if (!initWinSock()){
        cout << "Error init winsock: " << WSAGetLastError() << endl;
        return -1;
    }

    SOCKET hCusSocket;

    hCusSocket = socket(AF_INET,SOCK_STREAM,0);
    if (hCusSocket == INVALID_SOCKET){
        cout << "Tidak dapat membuat socket" << endl;
        WSACleanup();
        return -1;
    }

    struct sockaddr_in serverAddr;

    serverAddr . sin_family = AF_INET;
    serverAddr . sin_addr . s_addr = inet_addr(szServerIP);
    serverAddr . sin_port = htons(nServerPort);

    //Koneksi ke server
    if (connect(hCusSocket, (struct sockaddr *) &serverAddr, sizeof(serverAddr)) < 0){
        cout << "Tidak dapat konek ke server" << endl;
        closesocket(hCusSocket);
        WSACleanup();
        return -1;
    }

    char szInput[1024] = "";

    while(strcmp(szInput,"exit") != 0 ){
        cout << "Ketikkan nilai yg akan dikirim ke server, atau ketikkan 'exit' untuk keluar: ";
        cin >> szInput;

        int nInput = strlen( szInput );

        int nSend = 0;
        char *pInput = szInput;

        while((nSend = send( hCusSocket, pInput, nInput, 0 ) != nInput)){
            
			if(nSend == -1){
                cout << "Error mengirimkan data ke server" << endl;
                break;
            }
			
            if(nSend == nInput)break;

            pInput += nSend;
            nInput -= nSend;
        }

        if(strcmp(szInput,"exit")== 0){
            break;
        }

        nInput = recv(hCusSocket, szInput, sizeof(szInput), 0);
        if(nInput > 0){
            szInput[ nInput ] = '\0';
            cout << "Jawaban dari server: " << endl << szInput << endl << endl;
        }
    }

    closesocket(hCusSocket);
    WSACleanup();
    return 0;
}

bool initWinSock(){
    WSADATA wsa;
    if(!WSAStartup(MAKEWORD(2,0), &wsa))return true;

    return false;
}
